name: Meshery Open Service Mesh Pattern Components Generator
on:
  push:
    branches:
      #- "master"
      - "new-branch"
jobs:
  check_osm_version:
    name: Check OSM Version
    runs-on: ubuntu-latest
    outputs:
      NEW_OSM_VERSION: ${{ steps.glrt.outputs.release }}
      CURRENT_OSM_VERSION: ${{ env.CURRENT_OSM_VERSION }}
    steps:
      - name: Get latest release tag
        id: glrt
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: openservicemesh/osm
          excludes: prerelease, draft
      - name: Check out code
        uses: actions/checkout@master
        with:
          fetch-depth: 1
      - name: Get CURRENT_OSM_VERSION from .env
        run: |
          cat .github/.env > $GITHUB_ENV
  generator:
    name: Generate and push OAM definitions
    needs: [check_osm_version]
    if: ${{ needs.check_osm_version.outputs.NEW_OSM_VERSION  >  needs.check_osm_version.outputs.CURRENT_OSM_VERSION }}
    env:
      NEW_OSM_VERSION: ${{ needs.check_osm_version.outputs.NEW_OSM_VERSION }}
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@master
        with:
          fetch-depth: 1
          token: ${{ secrets.PAT }}
          ref: "new-branch"
            #token: ${{ secrets.GH_ACCESS_TOKEN }}
            #ref: "master"
      - name: Get OSM manifests
        run: |
          mkdir ./osm-crds
          cd ./osm-crds
          curl --remote-name-all `curl -H "Accept: application/vnd.github.VERSION.raw" https://api.github.com/repos/openservicemesh/osm/contents/charts/osm/crds\?ref\=$NEW_OSM_VERSION | jq 'map(.download_url) | .[]' | tr -d '"'`
          cd ..
          awk 'FNR==1 && NR>1 { printf("\n%s\n\n","---") } 1' osm-crds/*.yaml > ~/osm.yaml
      - name: Bulild jsonschema util
        run: |
          curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
          nvm install v14.15.3
          nvm install-latest-npm
          git clone https://github.com/layer5io/kubeopenapi-jsonschema util
          cd util
          npm i; npm i nexe -g
          make linux
      - name: Generate Workload definitions
        run: |
          mkdir -p ./templates/oam/workloads-$NEW_OSM_VERSION
          cd util
          template='{"apiVersion":"core.oam.dev/v1alpha1","kind":"WorkloadDefinition","metadata":{"name":""},"spec":{"definitionRef":{"name":""}}}'
          crds=$(./kubeopenapi-jsonschema --location ~/osm.yaml -t yaml --filter '$[?(@.kind=="CustomResourceDefinition")]' -o json --o-filter '$..["spec"]["names"]["kind"]' | jq '.[]')
          for t in ${crds[@]}; do
            nameUpper=`echo $t  | tr -d '"'`
            nameLower=`echo $t  | tr -d '"' | tr '[:upper:]' '[:lower:]'`
            definitionRef=$(printf %sosm.meshery.layer5.io $nameLower)
            name=`echo $t | tr -d '"' | tr '[:upper:]' '[:lower:]'`
            definitionRef=$(printf %sosm.meshery.layer5.io $name)
            ./kubeopenapi-jsonschema --location ~/osm.yaml -t yaml --filter '$[?(@.kind=="CustomResourceDefinition" && @.spec.names.kind=='$t')]..openAPIV3Schema.properties.spec' --o-filter "$[]" -o json | jq '.[] | .version = "'$NEW_OSM_VERSION'" | .title = "'$(printf %sOSM $nameUpper)'"' > ../templates/oam/workloads-$NEW_OSM_VERSION/$(printf %sosm.meshery.layer5io.schema.json $nameLower)
            echo $template | jq ' ."metadata"."name" = "'$(printf %sOSM $nameUpper)'" | ."spec"."definitionRef"."name"="'$definitionRef'"' > ../templates/oam/workloads-$NEW_OSM_VERSION/$(printf %sosm_definition.json $nameLower)
          done
      - name: Cleanup
        run: |
          rm -rf util osm-*
      - name: Update OSM version in .env
        run: |
          echo "CURRENT_OSM_VERSION=$NEW_OSM_VERSION" > .github/.env
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: ./templates ./.github
          commit_user_name: l5io
          commit_user_email: ci@layer5.io
          commit_author: ${{ github.actor }} <${{ github.actor }}@users.noreply.github.com>
          commit_options: "--signoff"
          commit_message: "[Patterns] Pattern components generated from latest osm manifests"
          branch: new-branch
